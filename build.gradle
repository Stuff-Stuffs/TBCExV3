plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT' apply false
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0' apply false
    id 'maven-publish'
}

version = project.mod_version

archives_base_name = "tbcexv3"

allprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'io.github.juuxel.loom-quiltflower'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    group = project.maven_group

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    loom {
        runtimeOnlyLog4j = true
        splitEnvironmentSourceSets()
    }

    sourceSets {
        testmod {
            compileClasspath += main.compileClasspath
            runtimeClasspath += main.runtimeClasspath
        }
    }

    subprojects.each { p ->
        loom.mods.register("tbcexv3" + p.name) {
            sourceSet p.sourceSets.main
            sourceSet p.sourceSets.client
        }
    }

    repositories {
        maven { url 'https://maven.wispforest.io' }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

        modImplementation "io.wispforest:owo-lib:${project.owo_version}"
        modClientImplementation "io.wispforest:owo-lib:${project.owo_version}"
        annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"
    }

    java {
        withSourcesJar()
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${project.archivesBaseName}" }
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modClientImplementation "io.wispforest:owo-lib:${project.owo_version}"
    annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"

    afterEvaluate {
        subprojects.each {
            api project(path: ":${it.path}:", configuration: "namedElements")
            clientImplementation project("${it.path}:").sourceSets.client.output
            include project("${it.path}:")
        }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
